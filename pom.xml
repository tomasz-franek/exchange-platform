<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.exchange.app</groupId>
  <artifactId>exchange-platform</artifactId>
  <version>0.2.62</version>
  <packaging>pom</packaging>
  <modules>
    <module>api-common</module>
    <module>api-internal</module>
    <module>api-external</module>
    <module>api-admin</module>
    <module>backend-db-storage</module>
    <module>core-exchange</module>
    <module>backend-common</module>
    <module>backend-internal</module>
    <module>backend-external</module>
    <module>backend-admin</module>
    <module>frontend-client</module>
    <module>frontend-admin</module>
  </modules>

  <properties>
    <java.version>21</java.version>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <build.frontend.skip>false</build.frontend.skip>

    <spring-boot.version>3.5.5</spring-boot.version>
    <logstash-logback-encoder.version>8.1</logstash-logback-encoder.version>
    <mapstruct.version>1.6.3</mapstruct.version>

    <exchange.docker.registry>localhost:32000</exchange.docker.registry>

    <docker.backend.external.skip>false</docker.backend.external.skip>
    <docker.backend.external.skipPush>${docker.backend.external.skip}
    </docker.backend.external.skipPush>
    <docker.backend.internal.skip>false</docker.backend.internal.skip>
    <docker.backend.internal.skipPush>${docker.backend.external.skip}
    </docker.backend.internal.skipPush>
    <docker.db.skip>false</docker.db.skip>
    <docker.db.skipPush>${docker.db.skip}</docker.db.skipPush>
    <docker.ui.skip>false</docker.ui.skip>
    <docker.ui.skipPush>${docker.ui.skip}</docker.ui.skipPush>
    <docker.local-image.version>local-version</docker.local-image.version>
    <jacoco.version>0.8.13</jacoco.version>
    <maven.clenup.plugin>3.5.0</maven.clenup.plugin>
    <openapi.generator.plugin>7.14.0</openapi.generator.plugin>
    <maven.sufferine.plugin>3.5.3</maven.sufferine.plugin>
    <docker.maven.plugin>0.46.0</docker.maven.plugin>
    <frontend.maven.plugin>1.15.1</frontend.maven.plugin>
    <git.commit.maven.plugin>9.0.2</git.commit.maven.plugin>
    <springdoc.version>2.8.9</springdoc.version>

    <node.version>v24.7.0</node.version>
    <npm.version>11.4.2</npm.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openapitools</groupId>
        <artifactId>jackson-databind-nullable</artifactId>
        <version>0.2.6</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>2.2.34</version>
      </dependency>
      <dependency>
        <groupId>net.logstash.logback</groupId>
        <artifactId>logstash-logback-encoder</artifactId>
        <version>${logstash-logback-encoder.version}</version>
      </dependency>
      <dependency>
        <groupId>com.itextpdf</groupId>
        <artifactId>itextpdf</artifactId>
        <version>5.5.13.4</version>
        <type>jar</type>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
          <executions>
            <execution>
              <id>jacoco-initialize</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-site</id>
              <phase>package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.14.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.sufferine.plugin}</version>
          <configuration>
            <argLine>${argLine} -Dfile.encoding=${project.build.sourceEncoding} -Xms256M</argLine>
            <runOrder>alphabetical</runOrder>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontend.maven.plugin}</version>
          <configuration>
            <skip>${build.frontend.skip}</skip>
            <nodeVersion>${node.version}</nodeVersion>
            <npmVersion>${npm.version}</npmVersion>
          </configuration>
          <executions>
            <execution>
              <id>install node and npm</id>
              <goals>
                <goal>install-node-and-npm</goal>
              </goals>
              <phase>generate-resources</phase>
            </execution>
            <execution>
              <id>npm install</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <phase>generate-resources</phase>
            </execution>
            <execution>
              <id>npm api</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <arguments>run generate-full-api</arguments>
              </configuration>
            </execution>
            <execution>
              <id>npm build</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <arguments>run build</arguments>
              </configuration>
            </execution>
            <execution>
              <id>npm run tests</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <phase>test</phase>
              <configuration>
                <arguments>run test-headless</arguments>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

  </build>

  <profiles>
    <profile>
      <id>develop</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>api-common</module>
        <module>api-internal</module>
        <module>api-external</module>
        <module>api-admin</module>
        <module>backend-db-storage</module>
        <module>core-exchange</module>
        <module>backend-common</module>
        <module>backend-internal</module>
        <module>backend-external</module>
        <module>backend-admin</module>
      </modules>
    </profile>
    <profile>
      <id>build</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <modules>
        <module>api-common</module>
        <module>api-internal</module>
        <module>api-external</module>
        <module>api-admin</module>
        <module>backend-db-storage</module>
        <module>core-exchange</module>
        <module>backend-common</module>
        <module>backend-internal</module>
        <module>backend-external</module>
        <module>backend-admin</module>
      </modules>
    </profile>
    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker.maven.plugin}</version>
            <executions>
              <execution>
                <id>buildDockerImage</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <images>
                <image>
                  <name>
                    ${exchange.docker.registry}/${project.artifactId}:${docker.local-image.version}
                  </name>
                  <build>
                    <contextDir>${project.basedir}</contextDir>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>