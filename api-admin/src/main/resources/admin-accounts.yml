openapi: "3.1.1"
info:
  title: Exchange Admin App Accounts API
  description: This is a REST API for Admin Exchange System application for Accounts Management.
  version: 1.0.0
servers:
  - url: http://localhost:8090/
paths:
  /accounts/deposit:
    post:
      summary: Save Deposit for User Account
      operationId: saveAccountDeposit
      x-application-role: hasAuthority('ADMIN')
      requestBody:
        description: new deposit data
        required: true
        content:
          application/json:
            schema:
              type: UserAccountOperation
      tags:
        - adminAccounts
      responses:
        '204':
          description: Operation completed successfully
        '404':
          description: Error user or account not found.
        '403':
          description: Unauthorized request
  /accounts/withdraw:
    post:
      summary: Save Exchange Ticket
      operationId: saveWithdrawRequest
      x-application-role: hasAuthority('ADMIN')
      requestBody:
        description: new exchange ticket object
        required: true
        content:
          application/json:
            schema:
              type: UserAccountOperation
      tags:
        - adminAccounts
      responses:
        '204':
          description: Operation completed successfully
        '404':
          description: Error user or account not found.
        '400':
          description: Returned when a user has insufficient funds for a money operation.
        '403':
          description: Unauthorized request
  /accounts/list:
    post:
      summary: User Account List
      operationId: loadAccounts
      x-application-role: hasAuthority('ADMIN')
      requestBody:
        description: search parameters
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAccountRequest"
      tags:
        - adminAccounts
      responses:
        '200':
          description: List of user accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: UserAccount
        '404':
          description: Error user or account not found.
        '403':
          description: Unauthorized request
  /accounts/system/list:
    get:
      summary: System Account List
      operationId: loadSystemAccountList
      x-application-role: hasAuthority('ADMIN')
      tags:
        - adminAccounts
      responses:
        '200':
          description: List of user accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: UserAccount
        '403':
          description: Unauthorized request
  /accounts/exchange/list:
    get:
      summary: Exchange Account List
      operationId: loadExchangeAccountList
      x-application-role: hasAuthority('ADMIN')
      tags:
        - adminAccounts
      responses:
        '200':
          description: List of user accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: UserAccount
        '403':
          description: Unauthorized request
  /accounts/operations:
    post:
      summary: Account Operation List
      operationId: loadAccountOperationList
      x-application-role: hasAuthority('ADMIN')
      tags:
        - adminAccounts
      requestBody:
        description: search parameters
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountOperationsRequest"
      responses:
        '200':
          description: List of system account operations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountOperation'
        '404':
          description: Account not found
        '403':
          description: Unauthorized request
components:
  schemas:
    UserAccountRequest:
      type: object
      properties:
        userId:
          type: string
          format: uuid
    AccountOperationsRequest:
      type: object
      required:
        - systemAccountId
        - dateFromUtc
      properties:
        dateFromUtc:
          type: string
          format: date
        dateToUtc:
          type: string
          format: date
        systemAccountId:
          description: System account Id
          type: string
          format: uuid
    AccountOperation:
      type: object
      properties:
        dateUtc:
          description: Date and time when the operation was created, in UTC timezone
          type: string
          format: date-time
        amount:
          description: The monetary value associated with the operation, represented as a 64-bit integer.
          type: integer
          format: int64