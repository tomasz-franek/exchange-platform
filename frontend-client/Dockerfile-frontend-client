FROM node:20.15.0 AS build

RUN apt-get update && \
    apt-get install -y wget && \
    wget https://corretto.aws/downloads/latest/amazon-corretto-21-x64-linux-jdk.tar.gz && \
    mkdir -p /usr/lib/jvm && \
    tar -xzf amazon-corretto-21-x64-linux-jdk.tar.gz -C /usr/lib/jvm && \
    rm amazon-corretto-21-x64-linux-jdk.tar.gz && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir /app && \
    mkdir /app/api-external && \
    mkdir /app/api-common && \
    mkdir /app/frontend-client

# Set JAVA_HOME environment variable
ENV JAVA_HOME=/usr/lib/jvm/amazon-corretto-21.0.7.6.1-linux-x64
ENV PATH=$JAVA_HOME/bin:$PATH

# Verify installations
RUN node -v && java --version
#
##COPY API
WORKDIR /app/api-external/src/main/resources
COPY api-external/src/main/resources/*.yml .

WORKDIR /app/api-common/src/main/resources
COPY api-common/src/main/resources/*.yml .


WORKDIR /app/frontend-client
RUN mkdir scripts
##copy all resources
COPY frontend-client/scripts/* ./scripts
RUN mkdir src
COPY frontend-client/src ./src/
COPY frontend-client/*.json .

ARG CONFIGURATION=production
ENV CONFIGURATION=$CONFIGURATION

RUN cd /app/frontend-client
RUN pwd
RUN npm install
RUN npm run generate-full-api
RUN npm run build -- --configuration=$CONFIGURATION --define configuration=\"$CONFIGURATION\"
#
### Stage 2: Serve the app using Nginx
FROM nginx:alpine
COPY frontend-client/nginx.conf /etc/nginx/nginx.conf
COPY --from=build /app/frontend-client/dist/frontend-client/browser /usr/share/nginx/html
