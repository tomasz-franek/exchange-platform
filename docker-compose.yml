services:
  db:
    image: exchange/db
    build:
      context: backend-internal
      dockerfile: Dockerfile-postgres
    mem_limit: 512m
    ports:
      - "5432:5432"
    container_name: exchange-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=exchange
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
  #################################################
  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    container_name: exchange-zookeeper
    mem_limit: 512m
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  #################################################
  keycloak:
    image: exchange/keycloak
    build:
      context: keycloak
      dockerfile: Dockerfile
    mem_limit: 2g
    ports:
      - "8081:8080"
    container_name: exchange-keycloak
    depends_on:
      - db
    environment:
      - KC_HOSTNAME_URL=http://db:8081
      - KC_HOSTNAME_STRICT_BACKCHANNEL=true
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_SCHEMA=keycloak
      - KC_DB_URL=jdbc:postgresql://db:5432/exchange
      - KC_DB_PASSWORD=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_POOL_INITIAL_SIZE=2
      - KC_DB_POOL_MAX_SIZE=5
      - KC_DB_POOL_MIN_SIZE=2
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
    restart: on-failure
  #################################################
  kafka:
    image: confluentinc/cp-kafka:7.9.2
    mem_limit: 1g
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    container_name: exchange-kafka
    expose:
      - '29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: on-failure
  #################################################
  init-kafka:
    image: confluentinc/cp-kafka:7.9.2
    depends_on:
      - kafka
    container_name: exchange-kafka-init
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e 'Waiting until kafka is reachable '
      kafka-topics --bootstrap-server kafka:9092 --list
      
      echo -e 'Creating kafka internal topics :'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic internal-account-list-topic --replication-factor 1 --partitions 10
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic internal-account-topic --replication-factor 1 --partitions 10
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic internal-cash-transaction-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic internal-exchange-result-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic internal-exchanges-topic --replication-factor 1 --partitions 10
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic internal-ticket-topic --replication-factor 1 --partitions 10
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic internal-fee-calculation-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic internal-snapshot-topic --replication-factor 1 --partitions 10
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic internal-error-topic --replication-factor 1 --partitions 1
      
      echo -e 'Creating kafka external topics :'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic external-account-list-topic --replication-factor 1 --partitions 10
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic external-account-topic --replication-factor 1 --partitions 10
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic external-order-book-topic --replication-factor 1 --partitions 1 --config retention.ms=20000
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
  #################################################
  backend-internal:
    image: exchange/backend-internal
    build:
      context: backend-internal
      dockerfile: Dockerfile-backend-internal
    mem_limit: 1g
    environment:
      DB_ADDRESS: db
      DB_PORT: 5432
      DB_NAME: exchange
      DB_USERNAME: exchange
      DB_PASSWORD: exchange
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_URL: http://keycloak:8081
      KEYCLOAK_CLIENT_SECRET: exchange-portal-secret
      EXCHANGE_RATIO_STRATEGY: org.exchange.internal.app.core.strategies.ratio.FirstTicketRatioStrategy
      EXCHANGE_FEE_STRATEGY: org.exchange.internal.app.core.strategies.fee.ZeroFeeStrategy
    ports:
      - "8070:8070"
    container_name: exchange-backend-internal
    depends_on:
      - init-kafka
      - db
    restart: on-failure
  #################################################
  backend-external:
    image: exchange/backend-external
    build:
      context: backend-external
      dockerfile: Dockerfile-backend-external
    mem_limit: 1g
    ports:
      - "8080:8080"
    container_name: exchange-backend-external
    depends_on:
      - init-kafka
      - db
      - backend-internal
    environment:
      DB_ADDRESS: db
      DB_PORT: 5432
      DB_NAME: exchange
      DB_USERNAME: exchange
      DB_PASSWORD: exchange
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_URL: http://keycloak:8081
      EXCHANGE_PORTAL_ALLOWED_ORIGINS: http://localhost:4200,http://localhost:8080,https://localhost:4200,https://localhost:8080,http://localhost:8081,https://localhost:8081,http://localhost:4100
      KEYCLOAK_CLIENT_SECRET: exchange-portal-secret
    restart: on-failure
  #################################################
  backend-admin:
    image: exchange/backend-admin
    build:
      context: backend-admin
      dockerfile: Dockerfile-backend-admin
    mem_limit: 1g
    ports:
      - "8090:8090"
    container_name: exchange-backend-admin
    depends_on:
      - init-kafka
      - db
      - backend-internal
    environment:
      DB_ADDRESS: db
      DB_PORT: 5432
      DB_NAME: exchange
      DB_USERNAME: exchange
      DB_PASSWORD: exchange
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_URL: http://keycloak:8081
      EXCHANGE_PORTAL_ALLOWED_ORIGINS: http://localhost:4100,http://localhost:8080,https://localhost:4100,https://localhost:8080,http://localhost:8081,https://localhost:8081
      KEYCLOAK_CLIENT_SECRET: exchange-portal-secret
    restart: on-failure
  #################################################
  frontend-client:
    image: exchange/frontend-client
    build:
      context: .
      dockerfile: frontend-client/Dockerfile-frontend-client
    mem_limit: 512m
    ports:
      - "4200:80"
    container_name: exchange-frontend-client
    depends_on:
      - db
      - kafka
      - keycloak
      - backend-external
  #################################################
  frontend-admin:
    image: exchange/frontend-admin
    build:
      context: .
      dockerfile: frontend-admin/Dockerfile-frontend-admin
    mem_limit: 512m
    ports:
      - "4100:80"
    container_name: exchange-frontend-admin
    depends_on:
      - db
      - kafka
      - keycloak
      - backend-admin